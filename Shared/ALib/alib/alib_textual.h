///////////////////////////////////////////////////////////////////////////////////////////////////
// alib_textual.h
// ---------------------
// begin     : 2006
// modified  : 16 Jan 2006
// author(s) : Albert Akhriev
// copyright : Albert Akhriev
// email     : aaah@mail.ru, aaahaaah@hotmail.com
///////////////////////////////////////////////////////////////////////////////////////////////////

#ifndef __DEFINE_ALIB_TEXTUAL_H__
#define __DEFINE_ALIB_TEXTUAL_H__

namespace alib
{

///////////////////////////////////////////////////////////////////////////////////////////////////
/// \brief Function tests an input character for backslash type.
///////////////////////////////////////////////////////////////////////////////////////////////////
inline bool IsBackSlash( int ch )
{
  return ((ch == _T('/')) || (ch == _T('\\')));
}


///////////////////////////////////////////////////////////////////////////////////////////////////
/// \brief Function converts specified character to the uppercase one.
///
/// \param  c  the character to be converted.
/// \return    converted character.
///////////////////////////////////////////////////////////////////////////////////////////////////
inline char CharToUpperCase( char c )
{
  return ((('a' <= c) && (c <= 'z')) ? (char)((c-'a')+'A') : c);
}


///////////////////////////////////////////////////////////////////////////////////////////////////
/// \brief Function converts specified character to the lowercase one.
///
/// \param  c  the character to be converted.
/// \return    converted character.
///////////////////////////////////////////////////////////////////////////////////////////////////
inline char CharToLowerCase( char c )
{
  return ((('A' <= c) && (c <= 'Z')) ? (char)((c-'A')+'a') : c);
}

} // namespace alib

#endif // __DEFINE_ALIB_TEXTUAL_H__

